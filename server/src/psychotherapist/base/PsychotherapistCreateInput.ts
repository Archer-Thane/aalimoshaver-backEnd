/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { CheckoutPaymentCreateNestedManyWithoutPsychotherapistsInput } from "./CheckoutPaymentCreateNestedManyWithoutPsychotherapistsInput";
import { Type } from "class-transformer";
import { PatientCreateNestedManyWithoutPsychotherapistsInput } from "./PatientCreateNestedManyWithoutPsychotherapistsInput";
import { PsychoScheduleCreateNestedManyWithoutPsychotherapistsInput } from "./PsychoScheduleCreateNestedManyWithoutPsychotherapistsInput";
import { SessionCreateNestedManyWithoutPsychotherapistsInput } from "./SessionCreateNestedManyWithoutPsychotherapistsInput";
import { WaitingListCreateNestedManyWithoutPsychotherapistsInput } from "./WaitingListCreateNestedManyWithoutPsychotherapistsInput";
@InputType()
class PsychotherapistCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cardNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => CheckoutPaymentCreateNestedManyWithoutPsychotherapistsInput,
  })
  @ValidateNested()
  @Type(() => CheckoutPaymentCreateNestedManyWithoutPsychotherapistsInput)
  @IsOptional()
  @Field(() => CheckoutPaymentCreateNestedManyWithoutPsychotherapistsInput, {
    nullable: true,
  })
  checkoutPayments?: CheckoutPaymentCreateNestedManyWithoutPsychotherapistsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => PatientCreateNestedManyWithoutPsychotherapistsInput,
  })
  @ValidateNested()
  @Type(() => PatientCreateNestedManyWithoutPsychotherapistsInput)
  @IsOptional()
  @Field(() => PatientCreateNestedManyWithoutPsychotherapistsInput, {
    nullable: true,
  })
  patients?: PatientCreateNestedManyWithoutPsychotherapistsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  pricePerHour?: number | null;

  @ApiProperty({
    required: false,
    type: () => PsychoScheduleCreateNestedManyWithoutPsychotherapistsInput,
  })
  @ValidateNested()
  @Type(() => PsychoScheduleCreateNestedManyWithoutPsychotherapistsInput)
  @IsOptional()
  @Field(() => PsychoScheduleCreateNestedManyWithoutPsychotherapistsInput, {
    nullable: true,
  })
  psychoSchedules?: PsychoScheduleCreateNestedManyWithoutPsychotherapistsInput;

  @ApiProperty({
    required: false,
    type: () => SessionCreateNestedManyWithoutPsychotherapistsInput,
  })
  @ValidateNested()
  @Type(() => SessionCreateNestedManyWithoutPsychotherapistsInput)
  @IsOptional()
  @Field(() => SessionCreateNestedManyWithoutPsychotherapistsInput, {
    nullable: true,
  })
  sessions?: SessionCreateNestedManyWithoutPsychotherapistsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shabaNumber?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalSessionsCount?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalSessionsLength?: number | null;

  @ApiProperty({
    required: false,
    type: () => WaitingListCreateNestedManyWithoutPsychotherapistsInput,
  })
  @ValidateNested()
  @Type(() => WaitingListCreateNestedManyWithoutPsychotherapistsInput)
  @IsOptional()
  @Field(() => WaitingListCreateNestedManyWithoutPsychotherapistsInput, {
    nullable: true,
  })
  waitingLists?: WaitingListCreateNestedManyWithoutPsychotherapistsInput;
}
export { PsychotherapistCreateInput };
