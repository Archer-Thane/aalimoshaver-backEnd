/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { CheckoutPaymentListRelationFilter } from "../../checkoutPayment/base/CheckoutPaymentListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { PatientListRelationFilter } from "../../patient/base/PatientListRelationFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { PsychoScheduleListRelationFilter } from "../../psychoSchedule/base/PsychoScheduleListRelationFilter";
import { SessionListRelationFilter } from "../../session/base/SessionListRelationFilter";
import { WaitingListListRelationFilter } from "../../waitingList/base/WaitingListListRelationFilter";
@InputType()
class PsychotherapistWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  cardNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CheckoutPaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CheckoutPaymentListRelationFilter)
  @IsOptional()
  @Field(() => CheckoutPaymentListRelationFilter, {
    nullable: true,
  })
  checkoutPayments?: CheckoutPaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PatientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PatientListRelationFilter)
  @IsOptional()
  @Field(() => PatientListRelationFilter, {
    nullable: true,
  })
  patients?: PatientListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phoneNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  pricePerHour?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PsychoScheduleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PsychoScheduleListRelationFilter)
  @IsOptional()
  @Field(() => PsychoScheduleListRelationFilter, {
    nullable: true,
  })
  psychoSchedules?: PsychoScheduleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SessionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SessionListRelationFilter)
  @IsOptional()
  @Field(() => SessionListRelationFilter, {
    nullable: true,
  })
  sessions?: SessionListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  shabaNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  totalSessionsCount?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  totalSessionsLength?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => WaitingListListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WaitingListListRelationFilter)
  @IsOptional()
  @Field(() => WaitingListListRelationFilter, {
    nullable: true,
  })
  waitingLists?: WaitingListListRelationFilter;
}
export { PsychotherapistWhereInput };
