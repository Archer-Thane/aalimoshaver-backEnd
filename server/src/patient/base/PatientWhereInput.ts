/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PsychotherapistListRelationFilter } from "../../psychotherapist/base/PsychotherapistListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumPatientGender } from "./EnumPatientGender";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { PatientGroupListRelationFilter } from "../../patientGroup/base/PatientGroupListRelationFilter";
import { PatientTraitListRelationFilter } from "../../patientTrait/base/PatientTraitListRelationFilter";
import { QuestionaireListRelationFilter } from "../../questionaire/base/QuestionaireListRelationFilter";
import { SessionListRelationFilter } from "../../session/base/SessionListRelationFilter";
import { EnumPatientStatus } from "./EnumPatientStatus";
@InputType()
class PatientWhereInput {
  @ApiProperty({
    required: false,
    type: () => PsychotherapistListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PsychotherapistListRelationFilter)
  @IsOptional()
  @Field(() => PsychotherapistListRelationFilter, {
    nullable: true,
  })
  currentPsychoId?: PsychotherapistListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  desc?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  discount?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumPatientGender,
  })
  @IsEnum(EnumPatientGender)
  @IsOptional()
  @Field(() => EnumPatientGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Other" | "NA";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  hasPsychotherapist?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  lastSessionTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PatientGroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PatientGroupListRelationFilter)
  @IsOptional()
  @Field(() => PatientGroupListRelationFilter, {
    nullable: true,
  })
  patientGroups?: PatientGroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PatientTraitListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PatientTraitListRelationFilter)
  @IsOptional()
  @Field(() => PatientTraitListRelationFilter, {
    nullable: true,
  })
  patientTraits?: PatientTraitListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phoneNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => QuestionaireListRelationFilter,
  })
  @ValidateNested()
  @Type(() => QuestionaireListRelationFilter)
  @IsOptional()
  @Field(() => QuestionaireListRelationFilter, {
    nullable: true,
  })
  questionaires?: QuestionaireListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SessionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SessionListRelationFilter)
  @IsOptional()
  @Field(() => SessionListRelationFilter, {
    nullable: true,
  })
  sessions?: SessionListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumPatientStatus,
  })
  @IsEnum(EnumPatientStatus)
  @IsOptional()
  @Field(() => EnumPatientStatus, {
    nullable: true,
  })
  status?:
    | "HasNoPsychotherapist"
    | "OnReserveList"
    | "InsideSchedule"
    | "HasOneSession"
    | "HasThreeSessions"
    | "HasSixSessions"
    | "MoreThanSixSessions";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  totalSessionsCount?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  totalSessionsLength?: StringNullableFilter;
}
export { PatientWhereInput };
