/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PsychotherapistCreateNestedManyWithoutPatientsInput } from "./PsychotherapistCreateNestedManyWithoutPatientsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsEnum,
  IsBoolean,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumPatientGender } from "./EnumPatientGender";
import { PatientGroupCreateNestedManyWithoutPatientsInput } from "./PatientGroupCreateNestedManyWithoutPatientsInput";
import { PatientTraitCreateNestedManyWithoutPatientsInput } from "./PatientTraitCreateNestedManyWithoutPatientsInput";
import { QuestionaireCreateNestedManyWithoutPatientsInput } from "./QuestionaireCreateNestedManyWithoutPatientsInput";
import { SessionCreateNestedManyWithoutPatientsInput } from "./SessionCreateNestedManyWithoutPatientsInput";
import { EnumPatientStatus } from "./EnumPatientStatus";
@InputType()
class PatientCreateInput {
  @ApiProperty({
    required: false,
    type: () => PsychotherapistCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => PsychotherapistCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => PsychotherapistCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  currentPsychoId?: PsychotherapistCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  desc?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  discount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumPatientGender,
  })
  @IsEnum(EnumPatientGender)
  @IsOptional()
  @Field(() => EnumPatientGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Other" | "NA" | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasPsychotherapist?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastSessionTime?: Date | null;

  @ApiProperty({
    required: false,
    type: () => PatientGroupCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => PatientGroupCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => PatientGroupCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  patientGroups?: PatientGroupCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: () => PatientTraitCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => PatientTraitCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => PatientTraitCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  patientTraits?: PatientTraitCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => QuestionaireCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => QuestionaireCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => QuestionaireCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  questionaires?: QuestionaireCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: () => SessionCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => SessionCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => SessionCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  sessions?: SessionCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    enum: EnumPatientStatus,
  })
  @IsEnum(EnumPatientStatus)
  @IsOptional()
  @Field(() => EnumPatientStatus, {
    nullable: true,
  })
  status?:
    | "HasNoPsychotherapist"
    | "OnReserveList"
    | "InsideSchedule"
    | "HasOneSession"
    | "HasThreeSessions"
    | "HasSixSessions"
    | "MoreThanSixSessions"
    | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalSessionsCount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  totalSessionsLength?: string | null;
}
export { PatientCreateInput };
