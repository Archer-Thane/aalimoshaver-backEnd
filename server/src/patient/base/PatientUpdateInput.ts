/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PsychotherapistUpdateManyWithoutPatientsInput } from "./PsychotherapistUpdateManyWithoutPatientsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsEnum,
  IsBoolean,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumPatientGender } from "./EnumPatientGender";
import { PatientGroupUpdateManyWithoutPatientsInput } from "./PatientGroupUpdateManyWithoutPatientsInput";
import { PatientTraitUpdateManyWithoutPatientsInput } from "./PatientTraitUpdateManyWithoutPatientsInput";
import { QuestionaireUpdateManyWithoutPatientsInput } from "./QuestionaireUpdateManyWithoutPatientsInput";
import { SessionUpdateManyWithoutPatientsInput } from "./SessionUpdateManyWithoutPatientsInput";
import { EnumPatientStatus } from "./EnumPatientStatus";
@InputType()
class PatientUpdateInput {
  @ApiProperty({
    required: false,
    type: () => PsychotherapistUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => PsychotherapistUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => PsychotherapistUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  currentPsychoId?: PsychotherapistUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  desc?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  discount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumPatientGender,
  })
  @IsEnum(EnumPatientGender)
  @IsOptional()
  @Field(() => EnumPatientGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Other" | "NA" | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasPsychotherapist?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastSessionTime?: Date | null;

  @ApiProperty({
    required: false,
    type: () => PatientGroupUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => PatientGroupUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => PatientGroupUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  patientGroups?: PatientGroupUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: () => PatientTraitUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => PatientTraitUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => PatientTraitUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  patientTraits?: PatientTraitUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => QuestionaireUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => QuestionaireUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => QuestionaireUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  questionaires?: QuestionaireUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: () => SessionUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => SessionUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => SessionUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  sessions?: SessionUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    enum: EnumPatientStatus,
  })
  @IsEnum(EnumPatientStatus)
  @IsOptional()
  @Field(() => EnumPatientStatus, {
    nullable: true,
  })
  status?:
    | "HasNoPsychotherapist"
    | "OnReserveList"
    | "InsideSchedule"
    | "HasOneSession"
    | "HasThreeSessions"
    | "HasSixSessions"
    | "MoreThanSixSessions"
    | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalSessionsCount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  totalSessionsLength?: string | null;
}
export { PatientUpdateInput };
