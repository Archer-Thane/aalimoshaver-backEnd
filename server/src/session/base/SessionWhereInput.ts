/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { PatientWhereUniqueInput } from "../../patient/base/PatientWhereUniqueInput";
import { PaymentWhereUniqueInput } from "../../payment/base/PaymentWhereUniqueInput";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { EnumSessionPayStatus } from "./EnumSessionPayStatus";
import { PsychotherapistWhereUniqueInput } from "../../psychotherapist/base/PsychotherapistWhereUniqueInput";
import { PsychoScheduleWhereUniqueInput } from "../../psychoSchedule/base/PsychoScheduleWhereUniqueInput";
import { ReportWhereUniqueInput } from "../../report/base/ReportWhereUniqueInput";
import { EnumSessionSessionType } from "./EnumSessionSessionType";
import { EnumSessionStatus } from "./EnumSessionStatus";
@InputType()
class SessionWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  attendTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  desc?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  length?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PatientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PatientWhereUniqueInput)
  @IsOptional()
  @Field(() => PatientWhereUniqueInput, {
    nullable: true,
  })
  patientId?: PatientWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PaymentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PaymentWhereUniqueInput)
  @IsOptional()
  @Field(() => PaymentWhereUniqueInput, {
    nullable: true,
  })
  payId?: PaymentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payments?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumSessionPayStatus,
  })
  @IsEnum(EnumSessionPayStatus)
  @IsOptional()
  @Field(() => EnumSessionPayStatus, {
    nullable: true,
  })
  payStatus?: "UnPaid" | "FullyPaid" | "PartailPaid";

  @ApiProperty({
    required: false,
    type: () => PsychotherapistWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PsychotherapistWhereUniqueInput)
  @IsOptional()
  @Field(() => PsychotherapistWhereUniqueInput, {
    nullable: true,
  })
  psychoId?: PsychotherapistWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PsychoScheduleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PsychoScheduleWhereUniqueInput)
  @IsOptional()
  @Field(() => PsychoScheduleWhereUniqueInput, {
    nullable: true,
  })
  psychoScheduleId?: PsychoScheduleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ReportWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ReportWhereUniqueInput)
  @IsOptional()
  @Field(() => ReportWhereUniqueInput, {
    nullable: true,
  })
  reportId?: ReportWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumSessionSessionType,
  })
  @IsEnum(EnumSessionSessionType)
  @IsOptional()
  @Field(() => EnumSessionSessionType, {
    nullable: true,
  })
  sessionType?: "Online" | "Offline" | "Mix";

  @ApiProperty({
    required: false,
    enum: EnumSessionStatus,
  })
  @IsEnum(EnumSessionStatus)
  @IsOptional()
  @Field(() => EnumSessionStatus, {
    nullable: true,
  })
  status?: "Free" | "Reserved" | "FinalChecked" | "InProgress" | "Done";
}
export { SessionWhereInput };
